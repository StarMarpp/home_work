# Задача №1
# Определите класс A, включающий:
#
# строку документирования класса '''Класс A''';
# метод set_a() для установки значения атрибута a;
# метод get_a() для получения значения этого атрибута.
# Выведите на экран документацию класса. Затем создайте
# первый экземпляр класса и при помощи определенных методов установите и
# выведите на экран значение его атрибута a. Далее создайте второй
# экземпляр класса, после чего также установите и выведите на экран
# значение атрибута a, но уже при помощи прямого доступа к атрибуту по точке

class A:
    """
    Документация класса А
    """
    def __init__(self):
        self.a = None
    def set_a(self,value):
        self.a = value
    def get_a(self):
        return self.a

print(A.__doc__)
first_a = A()
first_a.set_a(10)
print(first_a.get_a())
second_a = A()
print(second_a.a)


# Определите класс B, включающий:
#
# строку документирования класса '''Класс B''';
# конструктор, инициализирующий атрибут данных b
# создаваемых экземпляров;
# метод get_b() для получения значения этого атрибута.
# Выведите на экран документацию класса. Затем создайте
# экземпляр класса obj и при помощи метода экземпляра выведите на
# экран значение его атрибута b.

class B:
    """
    Документация класса В
    """
    def __init__(self,value):
        self.b = value

    def get_b(self):
        return self.b

print(B.__doc__)
obj = B('value')
print(obj.get_b())


class C(A, B):
    '''Класс C = A + B'''
    def __init__(self, a, b, c):
        B.__init__(self,b)
        self.a = a
        self.c = c
    def set_b(self, b):
        self.b = b
    def set_c(self, c):
        self.c = c
    def get_c(self):
        return self.c


# вывод документации класса
print(C.__doc__)
# создание экземпляра класса C
obj = C(1, 2, 3)
# вывод значений атрибутов объекта obj
print(obj.a)
print(obj.get_b())
print(obj.get_c())
